/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.sargunv.pokekotlin.models

import dev.sargunv.pokekotlin.models.AbilityDetailPokemonInnerPokemon
import dev.sargunv.pokekotlin.models.ContestEffectSummary
import dev.sargunv.pokekotlin.models.ContestTypeSummary
import dev.sargunv.pokekotlin.models.GenerationSummary
import dev.sargunv.pokekotlin.models.MoveChange
import dev.sargunv.pokekotlin.models.MoveChangeEffectEntriesInner
import dev.sargunv.pokekotlin.models.MoveDamageClassSummary
import dev.sargunv.pokekotlin.models.MoveDetailContestCombos
import dev.sargunv.pokekotlin.models.MoveDetailEffectChangesInner
import dev.sargunv.pokekotlin.models.MoveDetailMachinesInner
import dev.sargunv.pokekotlin.models.MoveDetailStatChangesInner
import dev.sargunv.pokekotlin.models.MoveFlavorText
import dev.sargunv.pokekotlin.models.MoveMeta
import dev.sargunv.pokekotlin.models.MoveName
import dev.sargunv.pokekotlin.models.MoveTargetSummary
import dev.sargunv.pokekotlin.models.SuperContestEffectSummary
import dev.sargunv.pokekotlin.models.TypeSummary

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param id 
 * @param name 
 * @param effectChance 
 * @param contestCombos 
 * @param contestType 
 * @param contestEffect 
 * @param damageClass 
 * @param effectEntries 
 * @param effectChanges 
 * @param generation 
 * @param meta 
 * @param names 
 * @param pastValues 
 * @param statChanges 
 * @param superContestEffect 
 * @param target 
 * @param type 
 * @param machines 
 * @param flavorTextEntries 
 * @param learnedByPokemon 
 * @param accuracy 
 * @param pp 
 * @param priority 
 * @param power 
 */
@Serializable

public data class MoveDetail (

    @SerialName(value = "id") @Required val id: kotlin.Int,

    @SerialName(value = "name") @Required val name: kotlin.String,

    @SerialName(value = "effect_chance") @Required val effectChance: kotlin.Int,

    @SerialName(value = "contest_combos") @Required val contestCombos: MoveDetailContestCombos,

    @SerialName(value = "contest_type") @Required val contestType: ContestTypeSummary,

    @SerialName(value = "contest_effect") @Required val contestEffect: ContestEffectSummary,

    @SerialName(value = "damage_class") @Required val damageClass: MoveDamageClassSummary,

    @SerialName(value = "effect_entries") @Required val effectEntries: kotlin.collections.List<MoveChangeEffectEntriesInner>,

    @SerialName(value = "effect_changes") @Required val effectChanges: kotlin.collections.List<MoveDetailEffectChangesInner>,

    @SerialName(value = "generation") @Required val generation: GenerationSummary,

    @SerialName(value = "meta") @Required val meta: MoveMeta,

    @SerialName(value = "names") @Required val names: kotlin.collections.List<MoveName>,

    @SerialName(value = "past_values") @Required val pastValues: kotlin.collections.List<MoveChange>,

    @SerialName(value = "stat_changes") @Required val statChanges: kotlin.collections.List<MoveDetailStatChangesInner>,

    @SerialName(value = "super_contest_effect") @Required val superContestEffect: SuperContestEffectSummary,

    @SerialName(value = "target") @Required val target: MoveTargetSummary,

    @SerialName(value = "type") @Required val type: TypeSummary,

    @SerialName(value = "machines") @Required val machines: kotlin.collections.List<MoveDetailMachinesInner>,

    @SerialName(value = "flavor_text_entries") @Required val flavorTextEntries: kotlin.collections.List<MoveFlavorText>,

    @SerialName(value = "learned_by_pokemon") @Required val learnedByPokemon: kotlin.collections.List<AbilityDetailPokemonInnerPokemon>,

    @SerialName(value = "accuracy") val accuracy: kotlin.Int? = null,

    @SerialName(value = "pp") val pp: kotlin.Int? = null,

    @SerialName(value = "priority") val priority: kotlin.Int? = null,

    @SerialName(value = "power") val power: kotlin.Int? = null

) {


}

